name: Build Kernel

on:
  push:
    paths:
      - ".github/workflows/build_kernel.yml"
  workflow_dispatch:
    inputs:
      release:
        description: "Release"
        required: true
        default: false
        type: boolean

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest

    strategy:
      matrix:
        ksu:
          - KernelSU
          - KernelSU-Next
          - SukiSU-Ultra

    steps:
      - name: Checkout
        uses: actions/checkout@main
        with:
          lfs: false

      - name: Install Packages
        run: sudo apt update -y && sudo apt install -y repo

      - name: Initialize and Sync Kernel Source
        run: |
          repo init --depth 1 -u https://android.googlesource.com/kernel/manifest -b common-android13-5.15
          mkdir -p .repo/local_manifests && cp manifests/kernel.xml .repo/local_manifests/default.xml
          repo --trace sync -c -j$(nproc --all) --no-tags --fail-fast

      - name: Add ${{ matrix.ksu }}
        run: |
          cd sm7550
          if [ "${{ matrix.ksu }}" == "KernelSU" ]; then
            curl -LSs "https://raw.githubusercontent.com/tiann/KernelSU/main/kernel/setup.sh" | bash -s v1.0.5
          elif [ "${{ matrix.ksu }}" == "KernelSU-Next" ]; then
            curl -LSs "https://raw.githubusercontent.com/KernelSU-Next/KernelSU-Next/next/kernel/setup.sh" | bash -s next-susfs-a13-5.15-dev
          elif [ "${{ matrix.ksu }}" == "SukiSU-Ultra" ]; then
            curl -LSs "https://raw.githubusercontent.com/SukiSU-Ultra/SukiSU-Ultra/main/kernel/setup.sh" | bash -s susfs-main
          fi

      - name: Checkout SUSFS
        run: |
          git clone https://gitlab.com/simonpunk/susfs4ksu -b gki-android13-5.15

          if [ "${{ matrix.ksu }}" == "KernelSU" ]; then
            cd susfs4ksu
            git checkout ad931027686e1029b8247dd596e40d4a51eb92c0
          fi

      - name: Apply SUSFS Patches
        run: |
          cd sm7550
          cp ../susfs4ksu/kernel_patches/fs/* fs
          cp ../susfs4ksu/kernel_patches/include/linux/* include/linux
          patch -p1 < ../susfs4ksu/kernel_patches/50_add_susfs_in_gki-android13-5.15.patch

          if [ "${{ matrix.ksu }}" == "KernelSU" ]; then
            cd KernelSU
            patch -p1 < ../../susfs4ksu/kernel_patches/KernelSU/10_enable_susfs_for_ksu.patch
          fi

      - name: Add Configuration
        run: |
          cat << EOF >> sm7550/arch/arm64/configs/gki_defconfig
          # KernelSU and SUSFS Config
          CONFIG_KSU=y
          CONFIG_KSU_SUSFS=y
          CONFIG_KSU_SUSFS_SUS_PATH=y
          CONFIG_KSU_SUSFS_SUS_MOUNT=y
          CONFIG_KSU_SUSFS_AUTO_ADD_SUS_KSU_DEFAULT_MOUNT=y
          CONFIG_KSU_SUSFS_AUTO_ADD_SUS_BIND_MOUNT=y
          CONFIG_KSU_SUSFS_SUS_KSTAT=y
          CONFIG_KSU_SUSFS_TRY_UMOUNT=y
          CONFIG_KSU_SUSFS_AUTO_ADD_TRY_UMOUNT_FOR_BIND_MOUNT=y
          CONFIG_KSU_SUSFS_SPOOF_UNAME=y
          CONFIG_KSU_SUSFS_ENABLE_LOG=y
          CONFIG_KSU_SUSFS_HIDE_KSU_SUSFS_SYMBOLS=y
          CONFIG_KSU_SUSFS_SPOOF_CMDLINE_OR_BOOTCONFIG=y
          CONFIG_KSU_SUSFS_OPEN_REDIRECT=y
          CONFIG_KSU_SUSFS_SUS_SU=y

          # tmpfs config
          CONFIG_TMPFS_XATTR=y
          CONFIG_TMPFS_POSIX_ACL=y

          # Additional config
          CONFIG_IP_NF_TARGET_TTL=y
          CONFIG_IP6_NF_TARGET_HL=y
          CONFIG_IP6_NF_MATCH_HL=y

          # BBR Config
          CONFIG_TCP_CONG_ADVANCED=y
          CONFIG_TCP_CONG_BBR=y
          CONFIG_NET_SCH_FQ=y
          CONFIG_TCP_CONG_BIC=n
          CONFIG_TCP_CONG_WESTWOOD=n
          CONFIG_TCP_CONG_HTCP=n
          EOF

          if [ "${{ matrix.ksu }}" == "KernelSU" ]; then
            echo "CONFIG_KSU_SUSFS_HAS_MAGIC_MOUNT=n" >> sm7550/arch/arm64/configs/gki_defconfig
          elif [ "${{ matrix.ksu }}" == "KernelSU-Next" ]; then
            echo "CONFIG_KSU_SUSFS_HAS_MAGIC_MOUNT=y" >> sm7550/arch/arm64/configs/gki_defconfig
          elif [ "${{ matrix.ksu }}" == "SukiSU-Ultra" ]; then
            echo "CONFIG_KPM=y" >> sm7550/arch/arm64/configs/gki_defconfig
            echo "CONFIG_KSU_SUSFS_HAS_MAGIC_MOUNT=y" >> sm7550/arch/arm64/configs/gki_defconfig
          fi

          # Remove check_defconfig
          sed -i 's|check_defconfig||g' sm7550/build.config.gki

      - name: Set Kernel Name
        run: |
          cd sm7550
          sed -i '$s|$res|-EclipseKernel|g' scripts/setlocalversion
          sed -i 's| -dirty||g' scripts/setlocalversion

      - name: Build Kernel
        run: |
          LTO=thin BUILD_CONFIG=sm7550/build.config.gki.aarch64 build/build.sh || exit 1
          mkdir artifacts && cd artifacts
          cp ../out/*/dist/boot.img EclipseKernel_${{ matrix.ksu }}.img

      - name: Make AnyKernel Zip
        run: |
          git clone https://github.com/Kernel-SU/AnyKernel3.git && cd AnyKernel3
          sed -i 's|^kernel\.string=.*|kernel.string=Eclipse Kernel by SomeEmptyBox|' anykernel.sh
          sed -i 's|^do\.devicecheck=.*|do.devicecheck=1|' anykernel.sh
          sed -i 's|^device\.name1=.*|device.name1=eqe|' anykernel.sh
          cp ../out/*/dist/Image .
          zip -r ../artifacts/EclipseKernel_${{ matrix.ksu }}.zip .

      - name: Upload Artifacts
        uses: actions/upload-artifact@main
        with:
          name: EclipseKernel_${{ matrix.ksu }}
          path: artifacts

  release:
    name: Release
    runs-on: ubuntu-latest
    needs: build
    if: ${{ inputs.release }}

    steps:
      - name: Checkout
        uses: actions/checkout@main

      - name: Download all artifacts
        uses: actions/download-artifact@main
        with:
          path: artifacts

      - name: Set Release Tag and Notes
        run: |
          echo "release=$(date +"%Y-%m-%d")" >> $GITHUB_ENV
          cat << EOF > release_notes.md

          Eclipse Kernel for Motorola Edge 50 Pro (eqe)

          Features:
          -> KernelSU
          -> KernelSU-Next
          -> SukiSU-Ultra
          -> SUSFS
          -> BBR Support

          Links:
          -> [KernelSU](https://github.com/tiann/KernelSU)
          -> [KernelSU-Next](https://github.com/KernelSU-Next/KernelSU-Next)
          -> [SukiSU-Ultra](https://github.com/SukiSU-Ultra/SukiSU-Ultra)
          -> [Kernel Flasher](https://github.com/fatalcoder524/KernelFlasher)
          -> [SUSFS Module](https://github.com/sidex15/susfs4ksu-module)
          -> [TCP Optimiser Module](https://github.com/fatalcoder524/TCP_Optimiser_Module)

          Notes:
          -> KernelSU is built on stable release for KSU drivers and SUSFS
          -> KernelSU-Next and SukiSU-Ultra are built on main branch
          -> Flash SUSFS Module and make sure SUS SU is enabled
          -> Flash TCP Optimiser Module and leave at default settings
          EOF

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          name: Eclipse Kernel
          tag_name: ${{ env.release }}
          body_path: release_notes.md

      - name: Upload Release Assets
        run: |
          for file in $(find artifacts -type f -name "*.zip" -o -name "*.img"); do
            echo "Uploading $file..."
            gh release upload "${{ env.release }}" "$file"
          done
        env:
          GH_TOKEN: ${{ github.token }}
